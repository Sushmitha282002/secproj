import java.util.*;
class TestClass {
    public static void main(String args[] ) throws Exception {
       Scanner sc=new Scanner(System.in);
       int g=sc.nextInt();
       while(g-->0){
        int rows=sc.nextInt();
        int column=sc.nextInt();
        int x=sc.nextInt();
        int y=sc.nextInt();
        int minx=Math.min(x,rows-x+1);
        int miny=Math.min(y,column-y+1);
        int min=Math.min(minx,miny);
        if(min<6){
            System.out.println("Mavis");
        }
        else
        System.out.println("Shivam");
       }
    }
}
 


import java.util.Scanner;
public class Demo{
public static void main(String[] args)
{
    Scanner scan=new Scanner(System.in);
    
    int t=scan.nextInt();
    scan.nextLine();
    while(t-- > 0)
    {
        int i,j;
        String s=scan.nextLine();
        char[] y=s.toCharArray();
        boolean[] x=new boolean[y.length];
        int count=0;
        for( i=0;i<y.length;i++)
        {
            if(x[i])
                continue;
        
            for(j=i+1;j<y.length;j++)
            {
                if(y[i]==y[j])
                {
                    count=count+1;
                    x[i]=true;
                    x[j]=true;
                    break;
                }
            }
        }
        System.out.println(count);

    }
}
}















import java.util.*;
class TestClass {
    public static void main(String args[] ) throws Exception {
        Scanner sc=new Scanner(System.in);
        int t=sc.nextInt();
        while(t -- > 0){
            String a=sc.next();
            String b=sc.next();
            if(a.equals(b) || a.equals("2") && b.equals("4")|| a.equals("4") && b.equals("2")){
                System.out.println("YES");
            }
            else{
                System.out.println("NO");
            }
        }
        
    }
}






import java.util.*;
public class Demo{
    public static void main(String[] args) throws Exception
    {
        Scanner scan=new Scanner(System.in);
        int t=scan.nextInt();
        while(t-->0)
        {
            String s=scan.next();
            int q=scan.nextInt();
            StringBuilder ans=new StringBuilder(s);
            for(int i=0;i<s.length();i++)
            {
                char ch=s.charAt(i);
                if((ch=='a')&&(q>0))
                {
                    ans.setCharAt(i,'b');
                    q--;
                }
                else if((ch=='e') && (q>0))
                {
                    ans.setCharAt(i,'f');
                    q--;
                }
                else if((ch=='i') && (q>0))
                {
                    ans.setCharAt(i,'j');
                    q--;
                }
                else if((ch=='o') && (q>0))
                {
                    ans.setCharAt(i,'p');
                    q--;
                }
                else if((ch=='u') && (q>0))
                {
                    ans.setCharAt(i,'v');
                    q--;
                }
                else
                {
                    ans.setCharAt(i,ch);
                }

            }
            System.out.println(ans);
        }
    }

}







import java.util.*;
 
public class TestClass {
    public static void main(String[] args)  {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        sc.nextLine();
 
        while(t-->0) {
            int N = sc.nextInt();
            int K = sc.nextInt();
            sc.nextLine();
            String S = sc.nextLine();
 
            String output= solve(N, K, S);
            System.out.println(output);
        }
 
        sc.close();
    }
 
    static String solve(int N, int K, String S) {
        int e = 1;
        for (int i = 0; i < N; i++) {
            int a = S.charAt(i) - S.charAt(i % e);
            if (a > 0)
                break;
            if (a < 0)
                e = i + 1;
        }
        StringBuilder p = new StringBuilder(S.substring(0, e));
        while (p.length() < N + K)
            p.append(p);
        return p.substring(0, N + K);
    }
}
    import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.*;
class TestClass {
    public static void main(String args[] ) throws Exception {
        Scanner sc=new Scanner(System.in);
        int t=sc.nextInt();
        while(t-->0){
        String s1=sc.next();
        String s2=sc.next();
        char[] ar1=s1.toCharArray();
        char[] ar2=s2.toCharArray();
        int count=0;
        Arrays.sort(ar1);
        Arrays.sort(ar2);
        for(int i=0;i<ar1.length;i++){
          if(ar1[i]!=ar2[i]){
            count++;
            }
        } 
        if(count==0)
            System.out.println("YES");
        else 
            System.out.println("NO");
        }
    }
}



import java.util.Scanner;
 
public class CityTravel {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
 
        int N = scanner.nextInt();
        int Q = scanner.nextInt();
       
        
        int[] cityTypes = new int[N];
        for (int i = 0; i < N; i++) {
            cityTypes[i] = scanner.nextInt();
        }

        for (int q = 0; q < Q; q++) {
            int Y = scanner.nextInt();
            int Z = scanner.nextInt();
            char D = scanner.next().charAt(0);
 
            int steps = findMinimumSteps(N, cityTypes, Y, Z, D);
            System.out.println(steps);
        }
 
        scanner.close();
    }
 
    private static int findMinimumSteps(int N, int[] cityTypes, int start, int targetType, char direction) {
        int step = 0;
        int current = start;
 

        int increment = (direction == 'R') ? 1 : -1;
 
        while (step < N) {
            if (cityTypes[current] == targetType) {
                return step;
            }
            current = (current + increment + N) % N; 
            step++;
        }

        return -1;
    }
}
 


import java.util.*;

public class Demo {
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int t = scan.nextInt();
        scan.nextLine(); 

        while (t-- > 0) {
            int n = scan.nextInt();
            int m = scan.nextInt();
          //  scan.nextLine(); 

            char[][] arr = new char[n][m];
            for (int i = 0; i < n; i++) {
                String row = scan.next(); 
                for (int j = 0; j < m; j++) {
                    arr[i][j] = row.charAt(j);
                }
            }
            scan.nextLine(); 

            String s = scan.nextLine();
            int flag =0;

            int x = 0; 
            for (int i = 0; i < n; i++) {
                if (x < s.length()) {
                    for (int j = 0; j < m; j++) {
                        if ( s.charAt(x) == arr[i][j]) {
                           
                           arr[i][j]=' ';
                            flag++;
                            break; 
                        }
                    }
                    x++;
                    if (i == n - 1) {
                        i = -1; 
                    }
                }
            }

            if (flag == s.length()) {
                System.out.println("Yes");
            } else {
                System.out.println("No");
            }
        }
        
    }
}




import java.util.*;
class TestClass {
    public static void main(String args[] ) throws Exception {
        Scanner sc=new Scanner(System.in);
        int t=sc.nextInt();
 
        while(t-- >0){
            String str=sc.next();
 
            int total =0;
 
            Map<String,Integer> fm=new HashMap<>();
            int a=0,b=0,c=0;
 
            fm.put("0,0",1);
 
            for(int j=0;j<str.length();j++){
                if(str.charAt(j)=='a'){
                    a++;
                }
                else if(str.charAt(j)=='b'){
                    b++;
                }else if(str.charAt(j)=='c'){
                    c++;
                }
 
                int b_a=b-a;
                int c_b=c-b;
                String key=b_a +","+c_b;
 
                if(fm.containsKey(key)){
                    total+=fm.get(key);
                }
 
                fm.put(key,fm.getOrDefault(key,0) + 1);
            }
            System.out.println(total);
        }
    }
}
 
